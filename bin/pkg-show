#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;
BEGIN { package DB; $CreateTTY=4; };
use strict;
use warnings;
use autodie;
use Time::HiRes qw(time);
use Nobody::Util;
use Fcntl;
use Fcntl qw(O_NONBLOCK);
use Env qw($HOME @PATH);
BEGIN {
  sub help {
    print grep { chomp; 1 } <DATA>;
  };
  use Getopt::WonderBra;
}
our(@VERSION) = qw( 0 1 0 );
sub pkg_name(@);
sub opts(@);
use feature qw(say);
sub main(@);

#@ARGV = qw(-n) unless @ARGV;
exit(main(opts(getopt("n",@ARGV))));
die "NONE SHALL PASS";

sub group($@);
my $use_pkg_name=0;
our(%opts);
sub opts(@){
  local(@_,$_)=@_;
  while(($_=shift)ne'--'){
    if( $_ eq '-n' ) {
      $use_pkg_name=1;
    } else {
      die "unexpected: ($_)";
    }
  };
  return @_;
};
my $ns;
BEGIN {
  $ns=chr(0x1f);
};
sub catch_child(\%) {
  our(%cmd);
  local(*cmd)=shift;
  $SIG{CHLD}=sub {
    my $pid=waitpid(-1,0);
  };  
};
sub main(@){
  our(@cmd);
  open(STDIN,"<","/dev/null");
  if($use_pkg_name) {
    open(STDIN,"-|", "time", "pkg-name", splice(@_));
    push(@_, map { split } <STDIN>);
    ddx("items: ", scalar(@_));
    close(STDIN);
  } 
  ddx(@_);
  for(my $i=0; $i<@_; $i++) {
    warn "i=$i\n";
    unshift(@_,[splice @_, $i, 100]);
  };
  ddx(@_);
  exit(0);

  push(@cmd,[qw(xargs apt-cache show)]);
  my %cmd;
  catch_child(%cmd);
  {
    my $pid;
    for my $cmd(@cmd) {
      $pid=open(STDIN,'-|',@$cmd);
      $cmd{$pid}=$cmd;
    };
  };
  our (%pkgs);
  my $max=0;
  $_=<STDIN>;
  while(defined($_)){
    if(m{^Package: (.*\S)}){
      my %pkg = ( Package=> $1 );
      $pkgs{$1}=\%pkg;
      my $len=length($1);
      $max=$len if $max<$len;
      while(<STDIN>){
        last if m{^Package:};
        if (m{^Description-?e?n?: (.*)}) {
          $pkg{Description}=$1;
        };
      };
    }
  };
  my $fmt=join("",'%-',$max,'s %s',"\n");
  for(sort keys %pkgs) {
    my %pkg = %{$pkgs{$_}};
    printf($fmt,$pkg{Package}, $pkg{Description});
  };
  return 0;
}

sub group($@){
  my $title=shift;
  @_=sort { $a->[0] cmp $b->[0] } @_;
  print join(".",@$_) for @_;
};
__DATA__
usage: $0 [-n] <pkg-name>
       <pkg-name> = the name of a package

      -n: use pkg-name to expand the pkgname

      use -n . to show all packages
      };
