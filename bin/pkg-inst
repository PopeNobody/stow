#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;

use common::sense;
BEGIN {
  use FindBin qw($Bin $Script);
  use autodie;
  use lib "$Bin/../lib/perl";
  use Getopt::WonderBra;
};
sub opts(@);
sub help {
  local($0) = map { m{/} ? m{.*/(.*)} : $_ } $0;
  print "usage: $0 --help\n";
  print "       $0 <files>";
  print "       lists all installed packages\n";
  print "       $0 -u <files>\n";
  print "       lists all uninstalled (but not purged) packages\n";
}
sub version {
  print "version: pkg-inst 0.1\n";
}
$ENV{LANG}="C";
my $del=0;
my $rev=0;
my %seen;
opts(@ARGV);

open(STDIN,"</dev/null");
sub filter;
sub mkFilter(@);
open(STDIN,"dpkg -l|");
sub xwarn(@){
  my ($pack,$file,$line) = caller;
  @_ = split(/\n/m,join("",@_));
  print "$file:$line:$_" for @_;
};
while(<STDIN>){
  next unless s{^([a-z][a-z])\s*}{};
  chomp;
  my $stat=$1;
  if($stat eq "ii") {
    next if $del;
  } else {
    next unless $del;
  };
  s{\s.*}{};
  ($_,my $arch)=split /:/;
  if(filter()) {
   $seen{$_}++;
 };
};
if($rev) {
  open(STDIN,"pkg-names|");
  while(<STDIN>){
    chomp;
    print "$_\n" unless $seen{$_}++;
  };
} else {
  print "$_\n" for sort keys %seen;
};
sub opts(@) {
  @_=getopt("ur",@_);
  while(($_=shift)ne'--'){
    if($_ eq '-u') {
      $del=1;
    } elsif ($_ eq '-r') {
      $rev=1;
    } else {
      die "did not expect '$_'";
    };
  };
  my $filter=mkFilter(@_);
  *filter=$filter;
}
sub mkFilter(@) {
  @_ = grep { length } @_;
  return sub { return 1; } unless @_;
  for(join("|",@_)){
    my $sub=eval qq{sub { 
      if(m{$_}) {
        return 1;
      } else {
        return 0;
      };
    }};
    return $sub;
  };
};
