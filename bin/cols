#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;
use Nobody::Util;
use common::sense;
use autodie;
use Carp;
sub main(@);
$Carp::verbose++ unless $Carp::verbose;
@_=main(@ARGV);
exit(0);
die "NONE SHALL PASS!";
sub col_widths(@) {
  my ($mc,@l) = max(0,map { -1+@$_ } @_);
  for my $c(0 .. $mc) {
    my @c = map { ($_->[$c]//="") } @_;
    push(@l,max(0,map{length}@c));
  };
  return @l;
};


sub main(@) {
  my (@l,@c);
  local($_);
  my @sel=grep { m{^-?(\d+)$} } @ARGV;
  die "extra args" if @ARGV>@sel;
  my ($last, $want)=0;
  my ($r,$c);
  for($r=0;1;$r++) {
    $_=<STDIN>;
    last unless defined;
    my @r=split;
    @r=grep { $_//="" } @r[@sel] if @sel;
    if(@r) {
      while(@r > @c) {
        my @t = map { "" } 0 .. $r;
        push(@c,\@t);
        push(@l,0);
      };
      for($c=0;$c<@c;$c++) {
        $_=$c[$c][$r]=($r[$c] // "");
        if(defined and length>$l[$c]){
          $l[$c]=length;
        };
      }
    }
  }
  for($c=0;$c<@c;$c++) {
    my $fmt = join('','%-',$l[$c],'s');
    for(@{$c[$c]}) {
      $_=sprintf($fmt,$_);
    };
  };
  my ($tmp) = {c=>\@c } ;
  for(my $r=0;$c[0] and $r<@{$c[0]};$r++) {
    for(join(" ", map { $c[$_][$r]//"" } 0 .. @c)) {
      s{\s+$}{};
      say;
    };
  };
};
