#!/bin/bash
#  vim: ts=2 sw=2

getppid () 
{
	local args="" script=false recurse=false run_ps=false count=0;
  if test "$1" == "--script"; then
    script=true
    shift
  fi
  local -a A
  if ! A=( $(getopt -u -o rp123456789 -- "$@") ); then
    return 1
  fi
  set -- "${A[@]}"
  while [ -n "$1" ] && [ "$1" != "--" ]; do
    case "$1" in
      (-r) recurse=true;;
      (-p) run_ps=true;;
      (-[1-9]) count=${1#-};;
      (*) echo >&2 bad arg "$1"; return 1 ;;
    esac
    shift
  done
  shift

  if (($# == 0)); then
    if $script; then
      set -- $PPID
    else
      set -- $$
    fi
  fi
  (($# > 1)) && echo "usage: getppid [-r] [-p] <-[0-9]> <pid>" >&2 && return 1

  if (( $count )); then
    for((i=1;i<$count && $1>1;i++)); do
      set -- $(ps h -oppid "$1") "$@";
    done
  elif $recurse; then
    # ok, technically, this is not recursion. Hysterical pourposes
    while (($1>1)); do
      set -- $(ps h -oppid "$1") "$@"
    done
  else
    set -- $(ps h -oppid "$@")
  fi
  if $run_ps; then
    ps -oppid,pid,cmd "$@"
  else
    printf '%s\n' "$@"
  fi
}
return 0 2>/dev/null

getppid --script "$@"
