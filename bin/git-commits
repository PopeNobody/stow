#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;

use strict;
use warnings;
BEGIN {
  use FindBin qw($Bin);
  use lib "$Bin/../lib/perl";
  $|++; $\="\n"; $,=" "; $"=" "; $\="\n";
};
use autodie qw(:all);
use Nobody::PP;
my ($date)="";
sub read_log() {
  local(@ARGV)="git log $date -- @ARGV|";
  local($_)=join("", <ARGV>);
  #  ddx($_);
  local(@_)=map { length ? ( "Id: $_" ) : (); } split(m{^commit  *}m);
  our(@id);
  for(@_){
    my ($head,$body) = split("\n\n");
    die "parse($_)" unless defined $body;
    for($body) {
      s{^\s+}{};
      s{\s+$}{};
    };
    for($head){
      for(@{$_=[ split /\n/ ]}){
        $_=[ m{^(.*?):\s+(\S.*\S)} ];
      }
    };
    push(@$head, [ "Comment", $body ]); 
    $_ = { map { @$_ } @$head };
    push(@id,$_->{Id});
  }
  return \@_;
};

$date="--date=unix"; # unless scalar( @ARGV = grep { !m{^-d$} } @ARGV ) == scalar(@ARGV);
our (@log,%log,$log);
*log=read_log();
my ($last)=0;
for my $log(reverse @log){
  my $date=$log->{Date};
  printf "%16d %16d %s\n", $date, ($date-$last), $log;
  $last=$date;
};
