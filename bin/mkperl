#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;

BEGIN {
  $DB::single=1;
}
use strict;
use warnings;
use Nobody::Util qw( $Bin $Script );
use Env qw($HOME @PATH);
$ENV{LANG}="C";

die "no filenames given" unless @ARGV;
sub read_src($){
  my ($src)=shift;
  die "$src does not exist" unless -e $src;
  local (@ARGV)=$src;
  $src=~s{^$ENV{HOME}/+}{~/};
  return join("", grep {  s{#src#}{$src} || 1 } <>);
}
my ($src) = join("",<DATA>);
for(@ARGV){
  if(-e) {
    warn "file '$_' exists";
  } else {
    my $dst=$_;
    local($\)="";
    {
      open(my $fh,">$dst.new",);
      $fh->print($src);
      $fh->print("# Header installed by $Bin/$Script");
      close($fh);
    }
    system("chmod +x $dst.new");
    rename("$dst.new", "$dst");
  }
};
sub editor() {
  @_ = grep { defined } map { $ENV{$_} } qw(VISUAL EDITOR);
  for(@_){
    if(!-x) {
      warn "$_ not executable";
      next;
    }
    return $_;
  }
}
unshift(@ARGV,editor());
unshift(@ARGV,"echo")  unless (-t 1);
exec(@ARGV);
__DATA__
#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;

use strict;
use warnings;
use Nobody::Util;
use Env qw($HOME @PATH);
our(@VERSION) = qw( 0 1 0 );


