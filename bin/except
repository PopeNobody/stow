#!/usr/bin/perl
# vim: sw=2 ts=2

use common::sense;
use Nobody::PP;
use autodie;

our(%opts);
$opts{dryrun}={ flag=>'n', count=>0, };
$opts{debug}={ flag=>'d', count=>0, };
our(@filter);
our(%exc,@grp,@cmd,$data);

$data={
      exc=>\%exc,
      cmd=>\@cmd,
      argv=>\@ARGV,
    };
## first we grab the exclude args.
while(@ARGV && ($_=shift)ne'--') {
  $exc{$_}=1;
};
while(@ARGV) {
  push(@cmd,[]);
  while(@ARGV && ($_=shift)ne'--')
  {
    push(@{$cmd[@cmd-1]},$_) unless (@cmd % 2) && $exc{$_};
  };
};
@cmd = map { @$_ } @cmd;
system(@cmd);
# Handle Args.
BEGIN {
  our(@VERSION) = qw(0 1 0);
  sub help {
    print for <DATA>;
  };
  sub version {
  }
  use Getopt::WonderBra;
  our(%opt);
  my (@flag,@name);
  for my ($k,$v) (each %opts) {
    ddx({ k=>$k, v=>$v });
  };
  for(keys %opts){
    local(*opt)=$opts{$_};
    my ($name,$flag);
    $name=$opt{name};
    $flag=$opt{flag};
    if(defined $name) {
      $opts{$name}||=\%opt;
    };
    if(defined $flag) {
      push(@flag,$flag);
      $opts{$flag}||=\%opt;
    };
  };
  my $optstr=join("",@flag);
  @ARGV=getopt($optstr,@ARGV);
  while(($_=shift)ne'--'){
  };
    
};
__DATA__
usage:  except [-d] \
[ args to exclude ] \
[ -- command and mandatory args ]
[ -- filtered args ] \
[ -- unfiltered args ] \
[ -- filtered args ]

execute command, filtering args.
