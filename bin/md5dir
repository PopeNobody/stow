#!/usr/bin/perl

my $check=0;
$|++;
use strict;
use warnings;
use Nobody::Util;
use Digest::MD5;
use Getopt::WonderBra;
my ($prog);
BEGIN {
  $prog=$0;
};
BEGIN {
  warn "prog=$prog";
};
my %missing;
my %skip = map { $_, 1 } qw( . .. CVS .git .md5 );
sub md5dir($);
sub main() {
  (*_)=*ARGV;
  say STDERR "start: @_";
  $,="  ";
  $\="\n";
  my @todo;
  while(@_){
    $_=shift;
    if($_ eq "-c"){
      $check=1;
    } elsif ( -d ) {
      push(@todo,$_);
    } else {
      die "no idea: $_";
    };
  };
  push(@todo,".") unless @todo;
  for(@todo) {
    print $_, "  ", md5dir($_);
  };
};
sub md5file($){
	my ($fn,$fh) =shift;
	die "got a dir" if -d $fn;
	if( open($fh,$fn) ) {
		my $md5=new Digest::MD5;
		$md5->addfile($fh);
		return $md5->hexdigest;
	} else {
		warn "open:$fn:$!";
		return undef;
	};
}
sub dents($) {
	my $dir=shift;
	opendir(my $dh, $dir||".") or die "opendir:$dir:$!";
	sort grep { !$skip{$_} } readdir($dh);
}
sub fixdir($) {
  for($_[0]) {
    $_="" unless defined;
    return $_ unless length;
    $_="$_/";
    s{//+}{/};
    return $_;
  };
}
sub md5dir($) {
  my $dir = fixdir(shift);
  say STDERR "dir: $dir";
	my %res;
	local $_;
	for(dents($dir)) {
		if( -d "$dir$_" ) {
			md5dir "$dir$_";
			$_=$_."/.md5";
		}
		$res{$_}=md5file("$dir$_");
	}
	if($check){
		if(open(my $fh,"<$dir.md5")) {
			while(<$fh>){
				chomp;
				my ($dig,$name)=split(/ [ *]/,$_,2);
				if(!exists $res{$name}){
					warn "missing file: $dir $name\n";
				} elsif ($res{$name} ne $dig) {
					warn "mismatch: $dir $name ($res{$name} ne $dig)\n";
				}
				delete $res{$name};
			}
		} else {
			warn "open:<$dir.md5:$!\n";
		}
		if( keys %res ) {
			for( sort keys %res ) {
				warn "extra file: $dir $_\n";
			};
		}
	} else {
    spit("$dir.md5", map { "$res{$_}  $_" } keys %res );
	}
}
main();
