#!/bin/sh
#
# Copyright (C) 1995 - 1998, Ian A. Murdock <imurdock@debian.org>
# Copyright (C) 1998, 1999, Guy Maor
# Copyright (C) 2002, Matthew Wilcox
# Copyright (C) 2002, 2004, 2005, 2007, 2009  Clint Adams
# Copyright (C) 2009  Manoj Srivasta
#
# Install the kernel on a Debian Linux system.
#
# This script is called from /usr/src/linux/arch/i386/boot/install.sh.
# If you install it as /sbin/installkernel, you can do a "make install"
# from a generic kernel source tree, and the image will be installed to
# the proper place for Debian GNU/Linux.

set -e -T
stderr() {
  echo >&2 "$@"
};
if (($EUID)); then
  set -- sudo $0 "$@"
  stderr "need to be root.  running: ($@)"
  exec "$@"
  exit 1
fi
case "x$verbose" in
  (xtrue|xfalse) ;;
  (x) verbose=true;;
  (*) stderr "verbose set to invalid value '$verbose'"; exit 1;;
esac
debug() {
  $verbose && stderr "$@";
};
parse_args() {
  debug "parse_args($@)"
  if [ $# -eq 3 ] || [ $# -eq 4 ] || [ $# -eq 5 ] ; then
    img="$2"
    map="$3"
    ver="$1"
    if [ $# -ge 4 ] && [ -n "$4" ] ; then
      dir="$4"
    else
      dir="/boot"
    fi
    cfg=$img;
    while not test -e "$cfg/.config"; do cfg=$(dirname "$cfg");done
    cfg="$cfg/.config"
  else
    stderr "Usage: installkernel <version> <image> <System.map> <directory>"
    exit 1
  fi
}
parse_args "$@"
debug src files: "$img" "$map" "$cfg"
debug dst files: vmlinuz System.map config
debug dir $dir/$ver

report() {
	"$@"
	x=$?;
	stderr $( printf '%q ' "$@" returned $x )
	return $x
}
store() {
  local out="$1"
  shift
  set -o noclobber
  exec 3> "$out" || return 1 
  "$@" >&3 || return 1
  exec 3<&-
  return 0;
};
not() {
  "$@" && return 1 || return 0
};
      

main() {
  stderr  "main($@)"
   
 set -e
  set -- $img vmlinuz $map System.map $cfg config
  dst="$dir/$ver"
  test -d "$dst.new/" && stderr "$dst.new exists.  :(" && rm -fr "$dst.new/"
  test -d "$dst.new/" && return 1;
  mkdir -p "$dst.new"
  if (( $# % 2 )) ; then stderr "\$# should be even.  $# $@"; return 1; fi
  while (($#)); do cat "$1" > "$dst.new/$2"; shift 2; done
  change=true
  cd $dst.new/
  if [ -e "$dst/sums.md5" ]; then
    change=false
    md5sum -c "$dst/sums.md5" || change=true
  fi
  $change || { stderr files did not change; rm -fr $dst.new ; return 0; }
  store sums.md5 md5sum vmlinuz System.map config  
  set -- $dst/ $dst.new/
  old=100
  while test -d $1; do set ${dst}.old.$((old++)) "$@"; done
  while (($#>1)); do 
    test -e "$1" && stderr "$1 exists" && return 1;
    mv -v "$2" "$1" || return 1;
    shift
  done
}
report main
