#!/usr/local/bin/vi_perl
#! -*- perl -*- -p
eval 'exec vi_perl -x -wS $0 ${1+"$@"}'
  if 0;

use strict;
use warnings;
use autodie qw(:all);
BEGIN {
  use FindBin qw($Bin);
  use lib "$Bin/../lib/perl";
  $|++;
  $\="\n"; $,=" "; $"=" ";
};
use Data::Dumper;
use File::Spec;
use File::Copy;

my $ver=shift;
my $img_src=shift;
my $map=shift;
for( $ver, $img_src, $map ) {
  die "Usage: installkernel <version> <image> <System.map> <directory>"
    unless defined($_);
}
die "img_src($img_src) does not exist" unless -e $img_src;
my $img=$img_src;
for($img){
  s{.*/}{};
  s{^bzImage$}{vmlinuz};
};
my $cfg="$img_src";
$cfg="./$cfg" unless substr($cfg,0,1) eq '/';
my $dir=shift;
$dir="/boot" unless defined $dir;
my $sub=join("/",$dir,$ver);
mkdir("$sub",0755) unless -d "$sub";


print Dumper({ ver=>$ver, img=>$img, img_src=>$img_src, dir=>$dir, sub=>$sub, map=>$map });
copy($img_src, join("/",$sub,$img));
copy($map, join("/",$sub,"System.map"));
copy(".config", join("/",$sub,"config"));
$ENV{PATH}.=":/usr/bin:/sbin";
if(my $pid=fork){
} else {
  my (@cmd) = qw(
    run-parts
    --verbose
    --exit-on-error 
    --arg=$ver
    --arg=$sub/$img
    /etc/kernel/postinst.d
   );
 for(@cmd){
   $_=eval join("",'"',$_,'"');
   die "$@" if $@;
 }
  exec @cmd;
};
my $initrd_src = join("/",$sub,"initrd.img-$ver");
my $initrd_dst = join("/",$sub,"initrd.img");
move($initrd_src, $initrd_dst);
system("ls -l $sub/*");
