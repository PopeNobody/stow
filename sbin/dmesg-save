#!/usr/bin/perl
#! -*- perl -*- -p
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;


use lib "$Bin/../lib/perl";
if($< or $>) {
 exec "sudo", readlink("/proc/self/exe"),"$0", @ARGV;
}

use strict;
use warnings;
use autodie qw(:all);
our ($VERSION) = join("-",qw ( 1 0 0 ));
BEGIN {
  $|++; $\="\n";
};
use autodie qw(:all);
use POSIX qw(strftime);
use subs;
sub test_klog();
sub gzip_append($@);
sub get_filename();
sub goto_dir();
sub main();
sub serdate();

my $gzip="|gzip -9";
die "no args used" if @ARGV;
exit(main());
die "survived exit!";

sub goto_dir() {
  for("/var/log/dmesg.d"){
    if(-e and not -d) {
      die "$_ is not a dir";
    }
    system("install -oroot -gadm -d $_");
    chdir($_);
  }
}
sub get_filename()
{
  my $new=shift;
  unless(-e "current.gz"){
    if(-l "current.gz") {
      unlink("current.gz");
    };
    my $realfile=join("","dmesg-",serdate(),".gz");
    symlink($realfile,"current.gz");
    gzip_append("current.gz","new file");
  };
  return "current.gz";
}
sub gzip_append($@){
  my ($fn)=shift;
  local(@_)=@_;
  chomp(@_);
  $_=join("\n",@_);
  my $lines = split("\n",$_);
  open(STDOUT,"$gzip>>$fn");
  print(STDOUT "$_");
  close(STDOUT);
  open(STDOUT,">&STDERR");
  return $lines;
}
sub main(){
  goto_dir();
  my $fn=get_filename();
  local (@ARGV) = "dmesg|";
  $_=<ARGV>;
  return 0 unless defined;
  my $lines=gzip_append($fn,$_, <ARGV>);
  @ARGV="dmesg -c|";
  @_=<ARGV>;
  splice(@_,0,$lines);
  system("echo dmesg-save ran at @{[serdate]} > /dev/kmsg");
  return 0 unless @_;
  unshift(@_,"more lines appeared");
  print STDERR "more lines appeared";
  gzip_append($fn,@_);
  return 0;
}
sub serdate()
{
  my @time=gmtime;
  return strftime("%Y%m%d-%H%M%S-gmt", @time);
}
