#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;

use strict;
use warnings;
BEGIN {
$|++; $\="\n"; $,=" "; $"=" "; $/="\n";
  use FindBin qw($Bin);
  use lib "$Bin/../lib/perl";
};
unless(-t STDIN){
  if(-t STDOUT){
    open(STDIN,"<&STDOUT");
  } else {
    open(STDIN,"<&STDERR");
  };
};
my $term = -t STDIN ? 1 : 0;

open(STDOUT,"|tee /usr/src/linux/buildkernel.log");
open(STDERR,">&STDOUT");
use autodie qw(:all);
use Nobody::PP;
use Getopt::WonderBra;

if($< or $>){
  print STDERR "press enter to run with sudo, q to quit";

  exec "sudo", "perl", $0, @ARGV
} else {
  print STDERR "We are already root";
};

my ($boot,$procs) = (0, map { split } qx(nproc));
$procs = 1 unless defined $procs;

sub help {
  print "usage: $0 [-j #]";
  print "   -j: number of jobs";
  print "";
};
our($VERSION)=join("-",qw(1 0 0));
sub version {
  print "$0: version $VERSION;";
};
@ARGV = getopt("bj:", @ARGV);
while(($_=shift)ne'--'){
  if(/^-j$/){
    $procs=shift;
    die "missing required int arg for -j" unless defined($procs);
    print "procs=$procs";
  } elsif (/^-b$/) {
    $boot=1;
  } else {
    die "unexpected: $_";
  };
};
chdir("/usr/src/linux");
my ( $diff ) = map { split } qx(git diff .config | wc -l );
if($diff) {
  print STDERR "committing .config";
  system("git commit -m \"buildkernel \$(serdate)\" .config");
};
system("make -j $procs bzImage modules");
system("make -j $procs modules_install install");
exit(0) unless $term;
if($boot) {
  print STDERR "running reboot";
  exec qw(reboot);
} else {
  print STDERR "running reboot";
  exec qw(may-reboot);
}
