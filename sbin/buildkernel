#!/usr/bin/perl
# vim: ts=2 sw=2 ft=perl
eval 'exec perl -x -wS $0 ${1+"$@"}'
  if 0;

use strict;
use warnings;
BEGIN {
  use FindBin qw($Bin);
  use lib "$Bin/../lib/perl";
};
use autodie qw(:all);
use Data::Dump;
use Getopt::WonderBra;

exec "sudo", "perl", $0, @ARGV
  if $< or $>;

my ($procs) = map { split } qx(nproc);
$procs = 1 unless defined $procs;
$|++; $\="\n"; $,=" "; $"=" "; $/="\n";
sub help {
  print "usage: $0 [-j #]";
  print "   -j: number of jobs";
  print "";
};
our($VERSION)=join("-",qw(1 0 0));
sub version {
  print "$0: version $VERSION;";
};
@ARGV = getopt("j:", @ARGV);
while(($_=shift)ne'--'){
  if(/^-j$/){
    $procs=shift;
    die "missing required int arg for -j" unless defined($procs);
    print "procs=$procs";
  } else {
    die "unexpected: $_";
  };
};
chdir("/usr/src/linux");
system("make -j $procs bzImage modules");
system("make -j $procs modules_install install");
